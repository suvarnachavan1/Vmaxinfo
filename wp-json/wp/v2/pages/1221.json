{"id":1221,"date":"2020-02-05T07:20:41","date_gmt":"2020-02-05T07:20:41","guid":{"rendered":"https:\/\/itechnasik.com\/?page_id=1221"},"modified":"2020-02-05T07:27:45","modified_gmt":"2020-02-05T07:27:45","slug":"data-structure-class-in-Pune","status":"publish","type":"page","link":"https:\/\/itechnasik.com\/data-structure-class-in-Pune\/","title":{"rendered":"Data Structure class in Pune"},"content":{"rendered":"\n<p>Vmaxinfo Instituteprovide Data Structure course in  punefor students of all streams.  Data structure is a way of organizing and storing data in a computer so that it can be used effectively. Data are nothing but a collection of facts and figures, or we can say that data are values or a set of values that are in a particular format. A data item refers to a single set of values. Data items are then after classified into sub-items which are the group of items which are not being called a plain elementary form of items. For example where the name of the student may be divided into three sub-items namely: first name, middle name and last name. But the ID which is assigned to a student would normally be considered as a single item. <\/p>\n\n\n\n<h2 class=\"wp-block-heading\"> Data Structure Course Contents: <\/h2>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"alignright size-large\"><img decoding=\"async\" width=\"203\" height=\"253\" src=\"https:\/\/itechnasik.com\/wp-content\/uploads\/2020\/02\/ds-tutorial.png\" alt=\"data structure class in Pune\" class=\"wp-image-1222\"\/><\/figure><\/div>\n\n\n\n<p> \u2013Introduction<br> \u2013Array<br> \u2013Pointer<br> \u2013Function<br> \u2013Structure<br> \u2013Pointer, Structure with Function<br> \u2013Stack<br> \u2013Applications of Stack<br> \u2013Linear Queue &amp; its Operations<br> \u2013Circular Queue &amp; its Operation<br> \u2013Linked List (Single ,Double ,Circular,<br> Header)<br> \u2013Tree<br> \u2013Graph<br> \u2013Hashing &amp; Searching<br> \u2013Sorting<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Data Structure Syllabus in Details<\/h3>\n\n\n\n<p><br><strong> Introduction:<br><\/strong> \u2013Concept Data Structure<br> \u2013Example<br> \u2013Need of Data structure<br> \u2013Advantages of using DS<br><strong> Algorithm &amp; Pseudocode:<br><\/strong> \u2013Algorithm Definition<br> \u2013Characteristics of algorithm<br> \u2013Elements of algorithm<br> \u2013Pseudocode example<br> \u2013Difference of Algorithm &amp; Pseudocode<br><strong> Function:<br><\/strong> \u2013What is function<br> \u2013Types of function<br> \u2013How function works<br> \u2013Function recursion and how it works.<br><strong> Array:<br><\/strong> \u2013Concept of Array<br> \u2013Types of array<br> \u2013Basic Programs<br> \u2013Array with Functions<br> \u2013Single &amp; 2-dimensional array in function argument.<br><strong> Pointer:<br><\/strong> \u2013Pointer Basics<br> \u2013Pointer with functions<br> \u2013Call by reference<br> \u2013Array of pointers &amp; pointer to array &amp; Programs<br><strong> Structure:<br><\/strong> \u2013Understanding about Structure<br> \u2013Pointer structure variable<br> \u2013Structure as function argument<br> \u2013using call by member value<br> \u2013hole structure and call by<br> \u2013passing reference of structure.<br><strong> Stack:<br><\/strong> \u2013Operations on Stack<br> \u2013Array &amp; Linked Representation<br> \u2013Programs on stack<br> \u2013Push &amp; Pop operations<br> \u2013Traversing.<br><strong> Applications of Stack :<br><\/strong> \u2013Arithmetic Expression Evaluation<br> \u2013Notations, Infix<br> \u2013Postfix, Prefix<br> \u2013Conversion infix to post fix<br> \u2013Conversion postfix to infix<br> \u2013Evaluation of Postfix and Pre fix using stack.<br><strong> Queue:<br><\/strong> \u2013Operations on Queue<br> \u2013Array &amp; Linked Representation<br> \u2013Programs on stack<br> \u2013Insert &amp; Delete operations<br> \u2013Circular queue<br> \u2013Rrepresentation<br> \u2013Deque<br> \u2013Priority Queue<br> \u2013Application of queue.<br><strong> LinkedList:<br><\/strong> \u2013Concept of linked list<br> \u2013Difference of linklist &amp; array<br> \u2013Single linked list<br> \u2013Representation<br> \u2013Operations<br> \u2013Traversing<br> \u2013Insertion(first node, last node, at a position, after a node value)<br> \u2013Deletion(first node, last node, at a position, after a node value)<br> \u2013Double linked list<br> \u2013Representation<br> \u2013Operations, traversing<br> \u2013Insertion (first node, last node, at a position, after a node value)<br> \u2013Deletion (first node, last node, at a position, after a node value)<br> \u2013Circular link list &amp; header link list example<br><strong> Tree:<br><\/strong> \u2013Tree terminology<br> \u2013Binary tree<br> \u2013Complete Binary Tree<br> \u2013Binary search tree<br> \u2013Tree Traversals<br> \u2013Creation of Binary Tree from traversal methods<br> \u2013Expression Tree &amp; expression Manipulation<br> \u2013Binary Search Tree<br> \u2013Insertion &amp; deletion in BST(Program)<br> \u2013AVL Tree, M-way Search Tree<br> \u2013B+ tree, Insertion &amp; deletion.<br><strong> Graph:<br><\/strong> \u2013Graph terminology<br> \u2013Representation of graphs<br> \u2013Path matrix<br> \u2013Graph Traversal<br> \u2013BFS (breadth first search)<br> \u2013DFS (depth first search)<br> \u2013Minimum spanning Tree<br> \u2013Kruskal&#8217;s Algorithm &amp; Prim&#8217;s Algorithm<br> \u2013Warshall&#8217;s algorithm (shortest path<br> algorithm).<br><strong> Hashing &amp; Searching:<br><\/strong> \u2013Linear and binary search methods<br> \u2013Hash functions<br> \u2013Hashing techniques &amp; Chaining.<br><strong> Sorting:<br><\/strong> \u2013Bubble sort<br> \u2013Selection sort<br> \u2013Insertion sort<br> \u2013Quick sort<br> \u2013Merge sort<br> \u2013Heap sort<br> \u2013Radix sort<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Vmaxinfo Instituteprovide Data Structure course in  punefor students of all streams. Data structure is a way of organizing and storing data in a computer so that it can be used effectively. Data are nothing but a collection of facts and figures, or we can say that data are values or a set of [&hellip;]<\/p>\n","protected":false},"author":3,"featured_media":0,"parent":0,"menu_order":0,"comment_status":"closed","ping_status":"closed","template":"","meta":{"footnotes":""},"_links":{"self":[{"href":"https:\/\/itechnasik.com\/wp-json\/wp\/v2\/pages\/1221"}],"collection":[{"href":"https:\/\/itechnasik.com\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/itechnasik.com\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/itechnasik.com\/wp-json\/wp\/v2\/users\/3"}],"replies":[{"embeddable":true,"href":"https:\/\/itechnasik.com\/wp-json\/wp\/v2\/comments?post=1221"}],"version-history":[{"count":2,"href":"https:\/\/itechnasik.com\/wp-json\/wp\/v2\/pages\/1221\/revisions"}],"predecessor-version":[{"id":1225,"href":"https:\/\/itechnasik.com\/wp-json\/wp\/v2\/pages\/1221\/revisions\/1225"}],"wp:attachment":[{"href":"https:\/\/itechnasik.com\/wp-json\/wp\/v2\/media?parent=1221"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}